/**
 * @file miniPC_process.h
 * @author Bi Kaixiang (wexhicy@gmail.com)
 * @brief   ????miniPC???,???????
 * @version 0.1
 * @date 2024-01-03
 *
 * @copyright Copyright (c) 2024
 *
 */

#ifndef MINIPC_PROCESS_H
#define MINIPC_PROCESS_H

#include "stdint.h"
#include "bsp_usart.h"

#define VISION_RECV_HEADER 0xA5u // ????????
#define VISION_SEND_HEADER 0x5Au // ????????
#define VISION_SEND_TAIL   0xAAu // ????????

#define VISION_RECV_SIZE   12u // ??????,12??
#define VISION_SEND_SIZE   19u

// #pragma pack(1) // 1????

/* ???? */
typedef enum {
    VISION_NO_SHOOTING = 0u,
    VISION_SHOOTING    = 1u,
} VISION_SHOOTING_e;

/* ?????? */
typedef enum {
    VISION_RESET_TRACKER_NO  = 0u,
    VISION_RESET_TRACKER_YES = 1u,
} VISION_RESET_TRACKER_e;

/* ??ID */
typedef enum {
    VISION_OUTPOST = 0u,
    VISION_GUARD   = 6u,
    VISION_BASE    = 7u,
} VISION_ID_e;

/* ????? */
typedef enum {
    VISION_ARMORS_NUM_BALANCE = 2u,
    VISION_ARMORS_NUM_OUTPOST = 3u,
    VISION_ARMORS_NUM_NORMAL  = 4u,
} VISION_ARMORS_NUM_e;

/* ??????? */
typedef enum {
    VISION_DETECT_COLOR_RED  = 1u,
    VISION_DETECT_COLOR_BLUE = 2u,
} VISION_DETECT_COLOR_e;

/* ???????????? */
typedef struct
{
    uint8_t header; // ?????
} Vision_Recv_Init_Config_s;

/* ???????????? */
typedef struct
{
    uint8_t header;        // ?????
    uint8_t detect_color;  // 0-red 1-blue
    uint8_t reset_tracker; // ??????? ?0 bool is_shoot; // ???????? ?? 1
    uint8_t is_shoot;      // ???????? ?? 1
    uint8_t tail;          // ?????
} Vision_Send_Init_Config_s;

/* ???????????? */
typedef struct
{
    Vision_Recv_Init_Config_s recv_config; // ???????
    Vision_Send_Init_Config_s send_config; // ???????
    USART_Init_Config_s usart_config;      // ???????
} Vision_Init_Config_s;

/* minipc -> stm32 (?????) */
typedef struct
{
    uint8_t header;
    float yaw;
    float pitch;
    uint16_t checksum;
} Vision_Recv_s;

/* stm32 -> minipc (?????) */
typedef struct
{
    uint8_t header;
    uint8_t detect_color;  // 0-red 1-blue ?1
    uint8_t reset_tracker; // ??????? ?0
    uint8_t is_shoot;      // ???????? ?? 1
    float roll;            // rad
    float yaw;             // rad
    float pitch;           //
    uint16_t checksum;     // crc16??? https://blog.csdn.net/ydyuse/article/details/105395368
    uint8_t tail;          // ?????
} Vision_Send_s;
/* ???????? */
typedef struct
{
    Vision_Recv_s *recv_data; // ?????????
    Vision_Send_s *send_data; // ?????????
    USART_Instance *usart;    // ??????
} Vision_Instance;

// #pragma pack() // ??1????

/**
 * @brief ???????????????,???????????????
 *
 * @param recv_config
 * @return Vision_Recv_s*
 */
Vision_Recv_s *VisionRecvRegister(Vision_Recv_Init_Config_s *recv_config);

/**
 * @brief ???????????????,???????????????
 *
 * @param send_config
 * @return Vision_Send_s*
 */
Vision_Send_s *VisionSendRegister(Vision_Send_Init_Config_s *send_config);

/**
 * @brief ??????????????,???????????????
 *
 * @param init_config
 * @return Vision_Recv_s*
 */
Vision_Recv_s *VisionInit(Vision_Init_Config_s *init_config);

/**
 * @brief ????
 *
 *
 */
void VisionSend();

/**
 * @brief ????????IMU??
 *
 * @param yaw
 * @param pitch
 * @param roll
 */
void VisionSetAltitude(float yaw, float pitch, float roll);

#endif // MINIPC_PROCESS_H